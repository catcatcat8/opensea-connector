/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeAssist, BridgeAssistInterface } from "../BridgeAssist";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limitPerSend_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeWallet_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
    ],
    name: "FulfilledTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "SentTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct BridgeAssist.Transaction",
        name: "transaction",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTransactions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "to",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct BridgeAssist.Transaction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limitPerSend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeWallet_",
        type: "address",
      },
    ],
    name: "setFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limitPerSend_",
        type: "uint256",
      },
    ],
    name: "setLimitPerSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001d2c38038062001d2c833981016040819052620000349162000137565b6001805460ff191690556200004b6000826200007d565b5060029190915560018054610100600160a81b0319166101006001600160a01b03938416021790551660805262000193565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200011a576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000d93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6001600160a01b03811681146200013457600080fd5b50565b600080600080608085870312156200014e57600080fd5b84516200015b816200011e565b60208601516040870151919550935062000175816200011e565b606086015190925062000188816200011e565b939692955090935050565b608051611b6f620001bd6000396000818161038201528181610cf20152610dea0152611b6f6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063a217fddf116100c3578063d9caed121161007c578063d9caed12146102fe578063ddca3f4314610311578063e206c4101461031a578063ef9253991461032d578063f25f4b561461034d578063fc0c546a1461037d57600080fd5b8063a217fddf146102ab578063a427b242146102b3578063affed0e0146102c6578063d3649d6c146102cf578063d547741f146102d8578063d56768eb146102eb57600080fd5b806336568abe1161011557806336568abe1461022d5780635c975abb1461024057806369fe0e2d1461024b57806390d49b9d1461025e57806391d1485414610271578063926d7d7f1461028457600080fd5b806301ffc9a714610152578063145381281461017a578063248a9ca3146101c45780632aa91bfd146101f55780632f2ff15d14610218575b600080fd5b610165610160366004611609565b6103a4565b60405190151581526020015b60405180910390f35b61018d610188366004611648565b6103db565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c001610171565b6101e76101d2366004611674565b60009081526020819052604090206001015490565b604051908152602001610171565b610165610203366004611674565b60066020526000908152604090205460ff1681565b61022b61022636600461168d565b610439565b005b61022b61023b36600461168d565b610463565b60015460ff16610165565b61022b610259366004611674565b6104e6565b61022b61026c3660046116bd565b610548565b61016561027f36600461168d565b6105af565b6101e77fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc481565b6101e7600081565b61022b6102c1366004611674565b6105d8565b6101e760035481565b6101e760025481565b61022b6102e636600461168d565b610646565b61022b6102f93660046116da565b61066b565b61022b61030c3660046116fc565b610843565b6101e760045481565b61022b610328366004611809565b61085f565b61034061033b3660046116bd565b610b43565b60405161017191906118e9565b6001546103659061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610171565b6103657f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b14806103d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600560205281600052604060002081815481106103f757600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b03909416965091945092909186565b60008281526020819052604090206001015461045481610bf7565b61045e8383610c04565b505050565b6001600160a01b03811633146104d85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104e28282610c88565b5050565b60006104f181610bf7565b81600454036105425760405162461bcd60e51b815260206004820152601f60248201527f43757272656e742066656520697320657175616c20746f206e6577206665650060448201526064016104cf565b50600455565b600061055381610bf7565b60405162461bcd60e51b815260206004820152602b60248201527f43757272656e742066656557616c6c657420697320657175616c20746f206e6560448201526a1dc819995955d85b1b195d60aa1b60648201526084016104cf565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006105e381610bf7565b81600254036106405760405162461bcd60e51b815260206004820152602360248201527f43757272656e74206c696d697420697320657175616c20746f206e6577206c696044820152621b5a5d60ea1b60648201526084016104cf565b50600255565b60008281526020819052604090206001015461066181610bf7565b61045e8383610c88565b60015460ff16156106b15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104cf565b600082116106ee5760405162461bcd60e51b815260206004820152600a6024820152690416d6f756e74203d20360b41b60448201526064016104cf565b60025482111561074c5760405162461bcd60e51b815260206004820152602360248201527f416d6f756e74206973206f76657220746865206c696d69742070657220312073604482015262195b9960ea1b60648201526084016104cf565b6107563383610ced565b336000818152600560208181526040808420815160c081018352958652428684019081529186018881524660608801908152608088018981526003805460a08b01908152855460018082018855968b52978a209a516006909802909a0180546001600160a01b0319166001600160a01b039098169790971787559451938601939093559051600285015551838301555160048301559351910155815491906107fd8361194d565b90915550506040805183815260208101839052339142917fa074d25f26597c1b5db2cb4a4a58999c577f0d6d0df5a950bd80013e0b70a5dd910160405180910390a35050565b600061084e81610bf7565b610859848484610d19565b50505050565b60015460ff16156108a55760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104cf565b468260800151146108ee5760405162461bcd60e51b815260206004820152601360248201527215dc9bdb99c8089d1bc88818da185a5b881a59606a1b60448201526064016104cf565b6000826040516020016109019190611966565b60408051601f19818403018152918152815160208084019190912060008181526006909252919020549192509060ff161561098a5760405162461bcd60e51b8152602060048201526024808201527f5369676e617475726520686173206265656e20616c72656164792066756c66696044820152631b1b195960e21b60648201526084016104cf565b6109b87fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc461027f8386610d7c565b6109f65760405162461bcd60e51b815260206004820152600f60248201526e57726f6e67207369676e617475726560881b60448201526064016104cf565b60008181526006602081815260408084208054600160ff19909116811790915588516001600160a01b0390811686526005808552838720805480850182559088528588208c519190970290960180546001600160a01b0319169690921695909517815592890151908301558701516002820181905560608801516003830155608088015160048084019190915560a08901519290930191909155905461271091610aa09190611974565b610aaa9190611993565b9050610ac98560000151828760400151610ac491906119b5565b610de5565b60045415610aec57600154610aec9061010090046001600160a01b031682610de5565b84516040808701516060880151825191825260208201526001600160a01b039092169142917fa5fefa2e4dfbca574fcc4e018136a3df5c7ce3437bfd2b9ab1f848e75d49126c910160405180910390a35050505050565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610bec5760008481526020908190206040805160c0810182526006860290920180546001600160a01b031683526001808201548486015260028201549284019290925260038101546060840152600481015460808401526005015460a08301529083529092019101610b7b565b505050509050919050565b610c018133610e10565b50565b610c0e82826105af565b6104e2576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610c443390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610c9282826105af565b156104e2576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6104e27f0000000000000000000000000000000000000000000000000000000000000000833084610e74565b6040516001600160a01b03831660248201526044810182905261045e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610eac565b6000610dde610dd8846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b83610f7e565b9392505050565b6104e27f00000000000000000000000000000000000000000000000000000000000000008383610d19565b610e1a82826105af565b6104e257610e32816001600160a01b03166014610fa2565b610e3d836020610fa2565b604051602001610e4e9291906119f8565b60408051601f198184030181529082905262461bcd60e51b82526104cf91600401611a6d565b6040516001600160a01b03808516602483015283166044820152606481018290526108599085906323b872dd60e01b90608401610d45565b6000610f01826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661113e9092919063ffffffff16565b80519091501561045e5780806020019051810190610f1f9190611aa0565b61045e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104cf565b6000806000610f8d8585611155565b91509150610f9a816111c3565b509392505050565b60606000610fb1836002611974565b610fbc906002611ac2565b67ffffffffffffffff811115610fd457610fd461173d565b6040519080825280601f01601f191660200182016040528015610ffe576020820181803683370190505b509050600360fc1b8160008151811061101957611019611ada565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061104857611048611ada565b60200101906001600160f81b031916908160001a905350600061106c846002611974565b611077906001611ac2565b90505b60018111156110ef576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110ab576110ab611ada565b1a60f81b8282815181106110c1576110c1611ada565b60200101906001600160f81b031916908160001a90535060049490941c936110e881611af0565b905061107a565b508315610dde5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104cf565b606061114d8484600085611379565b949350505050565b600080825160410361118b5760208301516040840151606085015160001a61117f878285856114aa565b945094505050506111bc565b82516040036111b457602083015160408401516111a9868383611597565b9350935050506111bc565b506000905060025b9250929050565b60008160048111156111d7576111d7611b07565b036111df5750565b60018160048111156111f3576111f3611b07565b036112405760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104cf565b600281600481111561125457611254611b07565b036112a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104cf565b60038160048111156112b5576112b5611b07565b0361130d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104cf565b600481600481111561132157611321611b07565b03610c015760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104cf565b6060824710156113da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104cf565b6001600160a01b0385163b6114315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104cf565b600080866001600160a01b0316858760405161144d9190611b1d565b60006040518083038185875af1925050503d806000811461148a576040519150601f19603f3d011682016040523d82523d6000602084013e61148f565b606091505b509150915061149f8282866115d0565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114e1575060009050600361158e565b8460ff16601b141580156114f957508460ff16601c14155b1561150a575060009050600461158e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561155e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115875760006001925092505061158e565b9150600090505b94509492505050565b6000806001600160ff1b038316816115b460ff86901c601b611ac2565b90506115c2878288856114aa565b935093505050935093915050565b606083156115df575081610dde565b8251156115ef5782518084602001fd5b8160405162461bcd60e51b81526004016104cf9190611a6d565b60006020828403121561161b57600080fd5b81356001600160e01b031981168114610dde57600080fd5b6001600160a01b0381168114610c0157600080fd5b6000806040838503121561165b57600080fd5b823561166681611633565b946020939093013593505050565b60006020828403121561168657600080fd5b5035919050565b600080604083850312156116a057600080fd5b8235915060208301356116b281611633565b809150509250929050565b6000602082840312156116cf57600080fd5b8135610dde81611633565b600080604083850312156116ed57600080fd5b50508035926020909101359150565b60008060006060848603121561171157600080fd5b833561171c81611633565b9250602084013561172c81611633565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156117765761177661173d565b60405290565b600082601f83011261178d57600080fd5b813567ffffffffffffffff808211156117a8576117a861173d565b604051601f8301601f19908116603f011681019082821181831017156117d0576117d061173d565b816040528381528660208588010111156117e957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008082840360e081121561181d57600080fd5b60c081121561182b57600080fd5b50611834611753565b833561183f81611633565b808252506020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a08201528092505060c083013567ffffffffffffffff81111561189357600080fd5b61189f8582860161177c565b9150509250929050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a090810151910152565b6020808252825182820181905260009190848201906040850190845b8181101561192b576119188385516118a9565b9284019260c09290920191600101611905565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161195f5761195f611937565b5060010190565b60c081016103d582846118a9565b600081600019048311821515161561198e5761198e611937565b500290565b6000826119b057634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156119c7576119c7611937565b500390565b60005b838110156119e75781810151838201526020016119cf565b838111156108595750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a308160178501602088016119cc565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a618160288401602088016119cc565b01602801949350505050565b6020815260008251806020840152611a8c8160408501602087016119cc565b601f01601f19169190910160400192915050565b600060208284031215611ab257600080fd5b81518015158114610dde57600080fd5b60008219821115611ad557611ad5611937565b500190565b634e487b7160e01b600052603260045260246000fd5b600081611aff57611aff611937565b506000190190565b634e487b7160e01b600052602160045260246000fd5b60008251611b2f8184602087016119cc565b919091019291505056fea26469706673582212201b586923e218942f163609542b915b03292f76e47cdb787f4bdd25040c99d36d64736f6c634300080f0033";

export class BridgeAssist__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token_: string,
    limitPerSend_: BigNumberish,
    feeWallet_: string,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeAssist> {
    return super.deploy(
      token_,
      limitPerSend_,
      feeWallet_,
      owner,
      overrides || {}
    ) as Promise<BridgeAssist>;
  }
  getDeployTransaction(
    token_: string,
    limitPerSend_: BigNumberish,
    feeWallet_: string,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      limitPerSend_,
      feeWallet_,
      owner,
      overrides || {}
    );
  }
  attach(address: string): BridgeAssist {
    return super.attach(address) as BridgeAssist;
  }
  connect(signer: Signer): BridgeAssist__factory {
    return super.connect(signer) as BridgeAssist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeAssistInterface {
    return new utils.Interface(_abi) as BridgeAssistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeAssist {
    return new Contract(address, _abi, signerOrProvider) as BridgeAssist;
  }
}
