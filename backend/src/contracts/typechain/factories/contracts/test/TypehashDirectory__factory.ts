/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TypehashDirectory,
  TypehashDirectoryInterface,
} from "../../../contracts/test/TypehashDirectory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060408051601880825261032082019092526000916020820161030080368337019050509050600061004260186100e3565b9050600061004e610166565b60405190915060005b60188110156100d557600061006d826001610218565b90508060030285526000858560405160200161008a929190610261565b6040516020818303038152906040529050600081805190602001209050808885815181106100ba576100ba6102b5565b60209081029190910101525050506040829052600101610057565b5060fe8452610301601f8501f35b606060006100f28360036102cb565b6001600160401b03811115610109576101096101ec565b6040519080825280601f01601f191660200182016040528015610133576020820181803683370190505b509050602081016003840281015b8082101561015d57625b325d60e81b8252600382019150610141565b50909392505050565b606060006040518060a00160405280606a8152602001610459606a9139905060006040518060c0016040528060848152602001610301608491399050600060405180610100016040528060d4815260200161038560d4913990508183826040516020016101d5939291906102e2565b604051602081830303815290604052935050505090565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561022b5761022b610202565b92915050565b6000815160005b818110156102525760208185018101518683015201610238565b50600093019283525090919050565b7f42756c6b4f72646572284f72646572436f6d706f6e656e747300000000000000815260006102936019830185610231565b6520747265652960d01b81526102ac6006820185610231565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761022b5761022b610202565b60006102ac6102fa6102f48488610231565b86610231565b8461023156fe436f6e73696465726174696f6e4974656d2875696e7438206974656d547970652c6164647265737320746f6b656e2c75696e74323536206964656e7469666965724f7243726974657269612c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e74294f72646572436f6d706f6e656e74732861646472657373206f6666657265722c61646472657373207a6f6e652c4f666665724974656d5b5d206f666665722c436f6e73696465726174696f6e4974656d5b5d20636f6e73696465726174696f6e2c75696e7438206f72646572547970652c75696e7432353620737461727454696d652c75696e7432353620656e6454696d652c62797465733332207a6f6e65486173682c75696e743235362073616c742c6279746573333220636f6e647569744b65792c75696e7432353620636f756e746572294f666665724974656d2875696e7438206974656d547970652c6164647265737320746f6b656e2c75696e74323536206964656e7469666965724f7243726974657269612c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e7429";

type TypehashDirectoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TypehashDirectoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TypehashDirectory__factory extends ContractFactory {
  constructor(...args: TypehashDirectoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TypehashDirectory> {
    return super.deploy(overrides || {}) as Promise<TypehashDirectory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TypehashDirectory {
    return super.attach(address) as TypehashDirectory;
  }
  override connect(signer: Signer): TypehashDirectory__factory {
    return super.connect(signer) as TypehashDirectory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TypehashDirectoryInterface {
    return new utils.Interface(_abi) as TypehashDirectoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TypehashDirectory {
    return new Contract(address, _abi, signerOrProvider) as TypehashDirectory;
  }
}
