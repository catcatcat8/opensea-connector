/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC721Revert,
  TestERC721RevertInterface,
} from "../../../contracts/test/TestERC721Revert";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323b872dd14610030575b600080fd5b61004361003e3660046100e2565b610045565b005b60405162461bcd60e51b81526020600482015261010060248201527f616161616161616161616161616161616161616161616161616161616161616160448201819052606482018190526084820181905260a4820181905260c4820181905260e4820181905261010482018190526101248201526101440160405180910390fd5b80356001600160a01b03811681146100dd57600080fd5b919050565b6000806000606084860312156100f757600080fd5b610100846100c6565b925061010e602085016100c6565b915060408401359050925092509256fea2646970667358221220c730b8703363b8462624b2ec513a72abfa80f44fec1b01d8b688852d15be150f64736f6c63430008110033";

type TestERC721RevertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721RevertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721Revert__factory extends ContractFactory {
  constructor(...args: TestERC721RevertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC721Revert> {
    return super.deploy(overrides || {}) as Promise<TestERC721Revert>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC721Revert {
    return super.attach(address) as TestERC721Revert;
  }
  override connect(signer: Signer): TestERC721Revert__factory {
    return super.connect(signer) as TestERC721Revert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721RevertInterface {
    return new utils.Interface(_abi) as TestERC721RevertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721Revert {
    return new Contract(address, _abi, signerOrProvider) as TestERC721Revert;
  }
}
