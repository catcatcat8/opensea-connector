/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC1155Revert,
  TestERC1155RevertInterface,
} from "../../../contracts/test/TestERC1155Revert";

const _abi = [
  {
    inputs: [],
    name: "getRevertData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610491806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631f6e5539146100465780632eb2c2d614610064578063f242432a14610079575b600080fd5b61004e61008c565b60405161005b9190610184565b60405180910390f35b6100776100723660046102b5565b6100a2565b005b6100776100873660046103b5565b610107565b6060600060405262100000600052621000206000f35b60405162461bcd60e51b815260206004820152602f60248201527f536f6d65204552433131353520726576657274206d65737361676520666f722060448201526e6261746368207472616e736665727360881b60648201526084015b60405180910390fd5b60405162461bcd60e51b81526020600482015261010060248201527f616161616161616161616161616161616161616161616161616161616161616160448201819052606482018190526084820181905260a4820181905260c4820181905260e482018190526101048201819052610124820152610144016100fe565b600060208083528351808285015260005b818110156101b157858101830151858201604001528201610195565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146101e957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561022d5761022d6101ee565b604052919050565b600082601f83011261024657600080fd5b8135602067ffffffffffffffff821115610262576102626101ee565b8160051b610271828201610204565b928352848101820192828101908785111561028b57600080fd5b83870192505b848310156102aa57823582529183019190830190610291565b979650505050505050565b600080600080600060a086880312156102cd57600080fd5b6102d6866101d2565b945060206102e58188016101d2565b9450604087013567ffffffffffffffff8082111561030257600080fd5b61030e8a838b01610235565b9550606089013591508082111561032457600080fd5b6103308a838b01610235565b9450608089013591508082111561034657600080fd5b818901915089601f83011261035a57600080fd5b81358181111561036c5761036c6101ee565b61037e601f8201601f19168501610204565b91508082528a8482850101111561039457600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60008060008060008060a087890312156103ce57600080fd5b6103d7876101d2565b95506103e5602088016101d2565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561041057600080fd5b818901915089601f83011261042457600080fd5b81358181111561043357600080fd5b8a602082850101111561044557600080fd5b602083019450809350505050929550929550929556fea26469706673582212202af39c56a821a5a5fdc8246a655db72e0d9c8f6bde906dc7bf481e699c23a45564736f6c63430008110033";

type TestERC1155RevertConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC1155RevertConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC1155Revert__factory extends ContractFactory {
  constructor(...args: TestERC1155RevertConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC1155Revert> {
    return super.deploy(overrides || {}) as Promise<TestERC1155Revert>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC1155Revert {
    return super.attach(address) as TestERC1155Revert;
  }
  override connect(signer: Signer): TestERC1155Revert__factory {
    return super.connect(signer) as TestERC1155Revert__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1155RevertInterface {
    return new utils.Interface(_abi) as TestERC1155RevertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1155Revert {
    return new Contract(address, _abi, signerOrProvider) as TestERC1155Revert;
  }
}
