/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestBadContractOfferer,
  TestBadContractOffererInterface,
} from "../../../contracts/test/TestBadContractOfferer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_seaport",
        type: "address",
      },
      {
        internalType: "contract ERC721Interface",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IntentionalRevert",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "b",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "c",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "d",
        type: "bytes",
      },
    ],
    name: "generateOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSeaportMetadata",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Schema[]",
        name: "schemas",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "minimumReceived",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "maximumSpent",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "previewOrder",
    outputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "offer",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "consideration",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct SpentItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ItemType",
            name: "itemType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct ReceivedItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ratifyOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ba4380380610ba483398101604081905261002f916100cb565b6001600160a01b038281166080819052600080546001600160a01b031916928416928317905560405163a22cb46560e01b815260048101919091526001602482015263a22cb46590604401600060405180830381600087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b505050505050610105565b6001600160a01b03811681146100c857600080fd5b50565b600080604083850312156100de57600080fd5b82516100e9816100b3565b60208401519092506100fa816100b3565b809150509250929050565b608051610a8761011d60003960005050610a876000f3fe6080604052600436106100435760003560e01c80632e778efc1461004f578063582d42411461007b57806398919765146100a9578063f4dd92ce146100c957600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610112565b604051610072929190610458565b60405180910390f35b34801561008757600080fd5b5061009b610096366004610586565b6101e8565b604051610072929190610663565b3480156100b557600080fd5b5061009b6100c4366004610746565b6103ef565b3480156100d557600080fd5b506100f96100e4366004610836565b637a6ec96760e11b9998505050505050505050565b6040516001600160e01b03199091168152602001610072565b604080516001808252818301909252606091829190816020015b60408051808201909152600081526060602082015281526020019060019003908161012c5790505090506105398160008151811061016c5761016c610933565b602090810291909101810151919091526040805160008082529281019091529050816000815181106101a0576101a0610933565b60200260200101516020018190525080604051806040016040528060168152602001752a32b9ba2130b221b7b73a3930b1ba27b33332b932b960511b81525090915091509091565b606080878760008181106101fe576101fe610933565b90506080020160400135600103610316578787808060200260200160405190810160405280939291908181526020016000905b8282101561025d5761024e60808302860136819003810190610958565b81526020019060010190610231565b509395506001935061026e92505050565b6040519080825280602002602001820160405280156102c757816020015b6040805160a08101825260008082526020808301829052928201819052606082018190526080820152825260001990920191018161028c5790505b506040805160a0810182526000808252602082018190529181018290526064606082015230608082015282519293509183919061030657610306610933565b60200260200101819052506103e2565b8787600081811061032957610329610933565b9050608002016040013560020361033c57005b8787600081811061034f5761034f610933565b90506080020160400135600303610379576040516333e03de160e11b815260040160405180910390fd5b6000888860405160200161038e9291906109d8565b604051602081830303815290604052805190602001209050600087876040516020016103bb9291906109d8565b60405160208183030381529060405280519060200120905081600052806020526101006000f35b9850989650505050505050565b606080610402898a8a8a8a8a8a8a6101e8565b9150915097509795505050505050565b6000815180845260005b818110156104385760208185018101518683018201520161041c565b506000602082860101526020601f19601f83011685010191505092915050565b6000604080835261046b81840186610412565b6020848203818601528186518084528284019150828160051b85010183890160005b838110156104cc57868303601f190185528151805184528601518684018990526104b989850182610412565b958701959350509085019060010161048d565b50909a9950505050505050505050565b80356001600160a01b03811681146104f357600080fd5b919050565b60008083601f84011261050a57600080fd5b50813567ffffffffffffffff81111561052257600080fd5b6020830191508360208260071b850101111561053d57600080fd5b9250929050565b60008083601f84011261055657600080fd5b50813567ffffffffffffffff81111561056e57600080fd5b60208301915083602082850101111561053d57600080fd5b60008060008060008060008060a0898b0312156105a257600080fd5b6105ab896104dc565b97506105b960208a016104dc565b9650604089013567ffffffffffffffff808211156105d657600080fd5b6105e28c838d016104f8565b909850965060608b01359150808211156105fb57600080fd5b6106078c838d016104f8565b909650945060808b013591508082111561062057600080fd5b5061062d8b828c01610544565b999c989b5096995094979396929594505050565b6006811061065f57634e487b7160e01b600052602160045260246000fd5b9052565b6040808252835182820181905260009190606090818501906020808901865b838110156106c9578151610697868251610641565b808401516001600160a01b03168685015287810151888701528601518686015260809094019390820190600101610682565b5050868303818801528751808452888201938201925060005b818110156107375784516106f7858251610641565b838101516001600160a01b03908116868601528882015189870152878201518887015260809182015116908501529382019360a0909301926001016106e2565b50919998505050505050505050565b60008060008060008060006080888a03121561076157600080fd5b61076a886104dc565b9650602088013567ffffffffffffffff8082111561078757600080fd5b6107938b838c016104f8565b909850965060408a01359150808211156107ac57600080fd5b6107b88b838c016104f8565b909650945060608a01359150808211156107d157600080fd5b506107de8a828b01610544565b989b979a50959850939692959293505050565b60008083601f84011261080357600080fd5b50813567ffffffffffffffff81111561081b57600080fd5b6020830191508360208260051b850101111561053d57600080fd5b600080600080600080600080600060a08a8c03121561085457600080fd5b893567ffffffffffffffff8082111561086c57600080fd5b6108788d838e016104f8565b909b50995060208c013591508082111561089157600080fd5b818c0191508c601f8301126108a557600080fd5b8135818111156108b457600080fd5b8d602060a0830285010111156108c957600080fd5b6020830199508098505060408c01359150808211156108e757600080fd5b6108f38d838e01610544565b909750955060608c013591508082111561090c57600080fd5b506109198c828d016107f1565b9a9d999c50979a9699959894979660800135949350505050565b634e487b7160e01b600052603260045260246000fd5b8035600681106104f357600080fd5b60006080828403121561096a57600080fd5b6040516080810181811067ffffffffffffffff8211171561099b57634e487b7160e01b600052604160045260246000fd5b6040526109a783610949565b81526109b5602084016104dc565b602082015260408301356040820152606083013560608201528091505092915050565b6020808252818101839052600090604080840186845b87811015610a4457610a0883610a0384610949565b610641565b6001600160a01b03610a1b8387016104dc565b1683860152818401358484015260608083013590840152608092830192909101906001016109ee565b509097965050505050505056fea26469706673582212207be7c2eb62d0555a44db9c189c9aed3b06bcb1c05ef0accf353c5c190a39672564736f6c63430008110033";

type TestBadContractOffererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBadContractOffererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBadContractOfferer__factory extends ContractFactory {
  constructor(...args: TestBadContractOffererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _seaport: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestBadContractOfferer> {
    return super.deploy(
      _seaport,
      _token,
      overrides || {}
    ) as Promise<TestBadContractOfferer>;
  }
  override getDeployTransaction(
    _seaport: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_seaport, _token, overrides || {});
  }
  override attach(address: string): TestBadContractOfferer {
    return super.attach(address) as TestBadContractOfferer;
  }
  override connect(signer: Signer): TestBadContractOfferer__factory {
    return super.connect(signer) as TestBadContractOfferer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBadContractOffererInterface {
    return new utils.Interface(_abi) as TestBadContractOffererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBadContractOfferer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestBadContractOfferer;
  }
}
