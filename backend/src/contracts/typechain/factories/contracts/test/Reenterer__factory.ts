/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Reenterer,
  ReentererInterface,
} from "../../../contracts/test/Reenterer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Reentered",
    type: "event",
  },
  {
    inputs: [],
    name: "callData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPrepared",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "msgValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetToUse",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "msgValueToUse",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callDataToUse",
        type: "bytes",
      },
    ],
    name: "prepare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061075f806100206000396000f3fe6080604052600436106100595760003560e01c80634e417a98146101325780635157589b1461015d578063939c28e61461017d578063b61d27f6146101a7578063d4b83992146101c7578063ddf363d71461020457600080fd5b3661012d5760005460ff161561012b5760008054600154604051839261010090046001600160a01b03169190610091906002906103ac565b60006040518083038185875af1925050503d80600081146100ce576040519150601f19603f3d011682016040523d82523d6000602084013e6100d3565b606091505b5091509150816100e7573d6000803e3d6000fd5b7f52b1b52a16f834754c20ed40ad488c0fc799dea307f9bb9cde6413f0e356703e816040516101169190610446565b60405180910390a150506000805460ff191690555b005b600080fd5b34801561013e57600080fd5b50610147610228565b6040516101549190610446565b60405180910390f35b34801561016957600080fd5b5061012b610178366004610495565b6102b6565b34801561018957600080fd5b506000546101979060ff1681565b6040519015158152602001610154565b3480156101b357600080fd5b5061012b6101c2366004610532565b6102fc565b3480156101d357600080fd5b506000546101ec9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610154565b34801561021057600080fd5b5061021a60015481565b604051908152602001610154565b6002805461023590610372565b80601f016020809104026020016040519081016040528092919081815260200182805461026190610372565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b505050505081565b60008054610100600160a81b0319166101006001600160a01b03871602179055600183905560026102e882848361064c565b50506000805460ff19166001179055505050565b6000836001600160a01b03168383604051610317919061070d565b60006040518083038185875af1925050503d8060008114610354576040519150601f19603f3d011682016040523d82523d6000602084013e610359565b606091505b505090508061036c573d6000803e3d6000fd5b50505050565b600181811c9082168061038657607f821691505b6020821081036103a657634e487b7160e01b600052602260045260246000fd5b50919050565b60008083546103ba81610372565b600182811680156103d257600181146103e757610416565b60ff1984168752821515830287019450610416565b8760005260208060002060005b8581101561040d5781548a8201529084019082016103f4565b50505082870194505b50929695505050505050565b60005b8381101561043d578181015183820152602001610425565b50506000910152565b6020815260008251806020840152610465816040850160208701610422565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461049057600080fd5b919050565b600080600080606085870312156104ab57600080fd5b6104b485610479565b935060208501359250604085013567ffffffffffffffff808211156104d857600080fd5b818701915087601f8301126104ec57600080fd5b8135818111156104fb57600080fd5b88602082850101111561050d57600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561054757600080fd5b61055084610479565b925060208401359150604084013567ffffffffffffffff8082111561057457600080fd5b818601915086601f83011261058857600080fd5b81358181111561059a5761059a61051c565b604051601f8201601f19908116603f011681019083821181831017156105c2576105c261051c565b816040528281528960208487010111156105db57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b601f82111561064757600081815260208120601f850160051c810160208610156106245750805b601f850160051c820191505b8181101561064357828155600101610630565b5050505b505050565b67ffffffffffffffff8311156106645761066461051c565b610678836106728354610372565b836105fd565b6000601f8411600181146106ac57600085156106945750838201355b600019600387901b1c1916600186901b178355610706565b600083815260209020601f19861690835b828110156106dd57868501358255602094850194600190920191016106bd565b50868210156106fa5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6000825161071f818460208701610422565b919091019291505056fea2646970667358221220a5d58672cfb6212352fd6f8aba551fb63180c1833c8d9ce1196bd729ff73fddb64736f6c63430008110033";

type ReentererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reenterer__factory extends ContractFactory {
  constructor(...args: ReentererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Reenterer> {
    return super.deploy(overrides || {}) as Promise<Reenterer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reenterer {
    return super.attach(address) as Reenterer;
  }
  override connect(signer: Signer): Reenterer__factory {
    return super.connect(signer) as Reenterer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentererInterface {
    return new utils.Interface(_abi) as ReentererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reenterer {
    return new Contract(address, _abi, signerOrProvider) as Reenterer;
  }
}
