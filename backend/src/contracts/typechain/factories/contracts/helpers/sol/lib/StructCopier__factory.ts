/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  StructCopier,
  StructCopierInterface,
} from "../../../../../contracts/helpers/sol/lib/StructCopier";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "ItemType",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "ItemType",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "OrderType",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "orderParameters",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "offerer",
        type: "address",
      },
      {
        internalType: "address",
        name: "zone",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "createMirrorOrderParameters",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "ItemType",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "ItemType",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "OrderType",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610b2761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806335ef3c151461003a575b600080fd5b61004d610048366004610785565b610063565b60405161005a91906109da565b60405180910390f35b61006b61046c565b600061007a8660600151610125565b9050600061008c8760400151876102c8565b90506000604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848152602001838152602001896080015160048111156100dc576100dc6108b4565b81526020018960a0015181526020018960c0015181526020018960e001518152602001896101000151815260200186815260200183518152509050809350505050949350505050565b60606000825167ffffffffffffffff811115610143576101436104e9565b6040519080825280602002602001820160405280156101b057816020015b61019d6040805160a08101909152806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816101615790505b50905060005b81518110156102c1576040518060a001604052808583815181106101dc576101dc610ab4565b60200260200101516000015160058111156101f9576101f96108b4565b815260200185838151811061021057610210610ab4565b6020026020010151602001516001600160a01b0316815260200185838151811061023c5761023c610ab4565b602002602001015160400151815260200185838151811061025f5761025f610ab4565b602002602001015160600151815260200185838151811061028257610282610ab4565b6020026020010151608001518152508282815181106102a3576102a3610ab4565b602002602001018190525080806102b990610aca565b9150506101b6565b5092915050565b60606000835167ffffffffffffffff8111156102e6576102e66104e9565b60405190808252806020026020018201604052801561034657816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816103045790505b50905060005b8451811015610464576040518060c0016040528086838151811061037257610372610ab4565b602002602001015160000151600581111561038f5761038f6108b4565b81526020018683815181106103a6576103a6610ab4565b6020026020010151602001516001600160a01b031681526020018683815181106103d2576103d2610ab4565b60200260200101516040015181526020018683815181106103f5576103f5610ab4565b602002602001015160600151815260200186838151811061041857610418610ab4565b6020026020010151608001518152602001856001600160a01b031681525082828151811061044857610448610ab4565b60200260200101819052508061045d90610aca565b905061034c565b509392505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001600060048111156104b9576104b96108b4565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610522576105226104e9565b60405290565b60405160c0810167ffffffffffffffff81118282101715610522576105226104e9565b604051610160810167ffffffffffffffff81118282101715610522576105226104e9565b604051601f8201601f1916810167ffffffffffffffff81118282101715610598576105986104e9565b604052919050565b6001600160a01b03811681146105b557600080fd5b50565b80356105c3816105a0565b919050565b600067ffffffffffffffff8211156105e2576105e26104e9565b5060051b60200190565b8035600681106105c357600080fd5b600082601f83011261060c57600080fd5b8135602061062161061c836105c8565b61056f565b82815260a0928302850182019282820191908785111561064057600080fd5b8387015b858110156106ab5781818a03121561065c5760008081fd5b6106646104ff565b61066d826105ec565b81528582013561067c816105a0565b818701526040828101359082015260608083013590820152608080830135908201528452928401928101610644565b5090979650505050505050565b600082601f8301126106c957600080fd5b813560206106d961061c836105c8565b82815260c092830285018201928282019190878511156106f857600080fd5b8387015b858110156106ab5781818a0312156107145760008081fd5b61071c610528565b610725826105ec565b815285820135610734816105a0565b8187015260408281013590820152606080830135908201526080808301359082015260a080830135610765816105a0565b9082015284529284019281016106fc565b8035600581106105c357600080fd5b6000806000806080858703121561079b57600080fd5b843567ffffffffffffffff808211156107b357600080fd5b9086019061016082890312156107c857600080fd5b6107d061054b565b6107d9836105b8565b81526107e7602084016105b8565b60208201526040830135828111156107fe57600080fd5b61080a8a8286016105fb565b60408301525060608301358281111561082257600080fd5b61082e8a8286016106b8565b60608301525061084060808401610776565b608082015260a0838101359082015260c0808401359082015260e08084013590820152610100808401359082015261012080840135908201526101409283013592810192909252509350610896602086016105b8565b92506108a4604086016105b8565b9396929550929360600135925050565b634e487b7160e01b600052602160045260246000fd5b600681106108da576108da6108b4565b9052565b600081518084526020808501945080840160005b838110156109485781516109078882516108ca565b838101516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a090960195908201906001016108f2565b509495945050505050565b600081518084526020808501945080840160005b8381101561094857815161097c8882516108ca565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c09096019590820190600101610967565b600581106108da576108da6108b4565b602081526109f46020820183516001600160a01b03169052565b60006020830151610a1060408401826001600160a01b03169052565b506040830151610160806060850152610a2d6101808501836108de565b91506060850151601f19858403016080860152610a4a8382610953565b9250506080850151610a5f60a08601826109ca565b5060a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610aea57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204f7121056cf1bb0437be73a65c60ec0c8c0b6f7fafafcbe58b8dd1c221e8629064736f6c63430008110033";

type StructCopierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StructCopierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StructCopier__factory extends ContractFactory {
  constructor(...args: StructCopierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StructCopier> {
    return super.deploy(overrides || {}) as Promise<StructCopier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StructCopier {
    return super.attach(address) as StructCopier;
  }
  override connect(signer: Signer): StructCopier__factory {
    return super.connect(signer) as StructCopier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StructCopierInterface {
    return new utils.Interface(_abi) as StructCopierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StructCopier {
    return new Contract(address, _abi, signerOrProvider) as StructCopier;
  }
}
