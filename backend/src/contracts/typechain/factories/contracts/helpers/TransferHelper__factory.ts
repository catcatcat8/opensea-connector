/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TransferHelper,
  TransferHelperInterface,
} from "../../../contracts/helpers/TransferHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "conduitController",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "ConduitErrorRevertBytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "ConduitErrorRevertString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "ERC721ReceiverErrorRevertBytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
    ],
    name: "ERC721ReceiverErrorRevertString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "conduit",
        type: "address",
      },
    ],
    name: "InvalidConduit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidERC20Identifier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "InvalidERC721Recipient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidERC721TransferAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidItemType",
    type: "error",
  },
  {
    inputs: [],
    name: "RecipientCannotBeZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum ConduitItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct TransferHelperItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "validateERC721Receiver",
            type: "bool",
          },
        ],
        internalType: "struct TransferHelperItemsWithRecipient[]",
        name: "items",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32",
      },
    ],
    name: "bulkTransfer",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610ce4380380610ce483398101604081905261002f916100ad565b6000819050806001600160a01b0316630a96ad396040518163ffffffff1660e01b81526004016040805180830381865afa158015610071573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009591906100dd565b60c05260a0526001600160a01b031660805250610101565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b600080604083850312156100f057600080fd5b505080516020909101519092909150565b60805160a05160c051610bb961012b60003960005050600060fc0152600060cb0152610bb96000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806332389b7114610030575b600080fd5b61004361003e366004610773565b610060565b6040516001600160e01b0319909116815260200160405180910390f35b60008161008f57604051630e7ccd9360e11b815260048101839052600060248201526044015b60405180910390fd5b61009a8484846100aa565b506332389b7160e01b9392505050565b6040516001600160f81b031960208201526bffffffffffffffffffffffff197f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f00000000000000000000000000000000000000000000000000000000000000006055820152829060009060750160408051601f19818403018152919052805160209091012090506000805b8381101561018e5736878783818110610161576101616107ee565b90506020028101906101739190610804565b905061017f8180610824565b93909301925050600101610146565b5060008167ffffffffffffffff8111156101aa576101aa610875565b60405190808252806020026020018201604052801561020a57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101c85790505b5090506000805b8581101561042a573689898381811061022c5761022c6107ee565b905060200281019061023e9190610804565b905036600061024d8380610824565b909250905061026a610265604085016020860161088b565b6105e9565b600061027c60608501604086016108bb565b80156102a05750610293604085016020860161088b565b6001600160a01b03163b15155b90508160005b8181101561041957368585838181106102c1576102c16107ee565b608002919091019150600190506102db60208301836108f3565b60038111156102ec576102ec6108dd565b03610314576040810135156103145760405163bef6db4760e01b815260040160405180910390fd5b600261032360208301836108f3565b6003811115610334576103346108dd565b0361035d57831561035d5761035d8c61035360408a0160208b0161088b565b8360400135610613565b6040805160c081019091528061037660208401846108f3565b6003811115610387576103876108dd565b815260200182602001602081019061039f919061088b565b6001600160a01b03168152602001336001600160a01b031681526020018860200160208101906103cf919061088b565b6001600160a01b031681526020018260400135815260200182606001358152508a8a81518110610401576104016107ee565b602090810291909101015250600197880197016102a6565b505050505050806001019050610211565b50604051632671a55160e11b81526001600160a01b03851690634ce34aa290610457908590600401610914565b6020604051808303816000875af1925050508015610492575060408051601f3d908101601f1916820190925261048f918101906109c9565b60015b61059b5761049e6109f3565b806308c379a0036104dc57506104b2610a4a565b806104bd57506104de565b8087866040516360b385ef60e11b815260040161008693929190610b1a565b505b3d808015610508576040519150601f19603f3d011682016040523d82523d6000602084013e61050d565b606091505b50602081015181516001600160e01b031990911690600414801561054157506001600160e01b03198116631e4cbc7f60e21b145b1561054e57600460208301fd5b8151602414801561056f57506001600160e01b031981166369f9582760e01b145b1561057c57602460208301fd5b818887604051632509da4f60e21b815260040161008693929190610b1a565b6001600160e01b03198116632671a55160e11b146105de57604051630e7ccd9360e11b8152600481018890526001600160a01b0386166024820152604401610086565b505050505050505050565b6001600160a01b03811661061057604051636c38382960e11b815260040160405180910390fd5b50565b604051630a85bd0160e11b81526001600160a01b03848116600483015233602483015260448201839052608060648301526000608483015283169063150b7a029060a4016020604051808303816000875af1925050508015610692575060408051601f3d908101601f1916820190925261068f918101906109c9565b60015b6107315761069e6109f3565b806308c379a0036106de57506106b2610a4a565b806106bd57506106e0565b8083338460405163b448231160e01b81526004016100869493929190610b4d565b505b3d80801561070a576040519150601f19603f3d011682016040523d82523d6000602084013e61070f565b606091505b508083338460405163164ba4a560e31b81526004016100869493929190610b4d565b6001600160e01b03198116630a85bd0160e11b1461076d5760405163bade48ef60e01b81526001600160a01b0384166004820152602401610086565b50505050565b60008060006040848603121561078857600080fd5b833567ffffffffffffffff808211156107a057600080fd5b818601915086601f8301126107b457600080fd5b8135818111156107c357600080fd5b8760208260051b85010111156107d857600080fd5b6020928301989097509590910135949350505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261081a57600080fd5b9190910192915050565b6000808335601e1984360301811261083b57600080fd5b83018035915067ffffffffffffffff82111561085657600080fd5b6020019150600781901b360382131561086e57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561089d57600080fd5b81356001600160a01b03811681146108b457600080fd5b9392505050565b6000602082840312156108cd57600080fd5b813580151581146108b457600080fd5b634e487b7160e01b600052602160045260246000fd5b60006020828403121561090557600080fd5b8135600481106108b457600080fd5b60208082528251828201819052600091906040908185019086840185805b838110156109bb5782518051600480821061095a57634e487b7160e01b855260218152602485fd5b508652808801516001600160a01b0390811689880152878201511687870152606080820151610993828901826001600160a01b03169052565b50506080818101519087015260a0908101519086015260c09094019391860191600101610932565b509298975050505050505050565b6000602082840312156109db57600080fd5b81516001600160e01b0319811681146108b457600080fd5b600060033d1115610a0c5760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610a4357634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610a585790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715610a8857505050505090565b8285019150815181811115610aa05750505050505090565b843d8701016020828501011115610aba5750505050505090565b610ac960208286010187610a0f565b509095945050505050565b6000815180845260005b81811015610afa57602081850181015186830182015201610ade565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610b2d6060830186610ad4565b6020830194909452506001600160a01b0391909116604090910152919050565b608081526000610b606080830187610ad4565b6001600160a01b039586166020840152939094166040820152606001529291505056fea26469706673582212207cca55f58ad794408f7f25dfc205240045b063307e40d9776e4479b7815dea1c64736f6c63430008110033";

type TransferHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferHelper__factory extends ContractFactory {
  constructor(...args: TransferHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    conduitController: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferHelper> {
    return super.deploy(
      conduitController,
      overrides || {}
    ) as Promise<TransferHelper>;
  }
  override getDeployTransaction(
    conduitController: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(conduitController, overrides || {});
  }
  override attach(address: string): TransferHelper {
    return super.attach(address) as TransferHelper;
  }
  override connect(signer: Signer): TransferHelper__factory {
    return super.connect(signer) as TransferHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferHelperInterface {
    return new utils.Interface(_abi) as TransferHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferHelper {
    return new Contract(address, _abi, signerOrProvider) as TransferHelper;
  }
}
