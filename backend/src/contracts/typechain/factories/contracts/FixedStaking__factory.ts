/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FixedStaking,
  FixedStakingInterface,
} from "../../contracts/FixedStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "adder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "added",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "class",
        type: "uint8",
      },
    ],
    name: "IncreaseRewardPoolForClass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "adder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "added",
        type: "uint256",
      },
    ],
    name: "IncreaseRewardPools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxStakesBefore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxStakesAfter",
        type: "uint256",
      },
    ],
    name: "MaxStakesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "class",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalAmount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "class",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activeStakesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    name: "getStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "class",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "unstaked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initialAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalAmount",
            type: "uint256",
          },
        ],
        internalType: "struct FixedStaking.Stake[]",
        name: "all",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "class",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "unstaked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initialAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalAmount",
            type: "uint256",
          },
        ],
        internalType: "struct FixedStaking.Stake[]",
        name: "active",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "activeIndexes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "class_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "increaseRewardPoolForClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amount_",
        type: "uint256[]",
      },
    ],
    name: "increaseRewardPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "periods",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "returnAccidentallySent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "class_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint8",
        name: "class",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "unstaked",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max_",
        type: "uint256",
      },
    ],
    name: "updateMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405262278d006080908152624f1a0060a0526276a70060c05262ed4e0060e0526301e13380610100526200003c90600290600562000132565b506040805160a08082018352606e825260786020830152607d92820192909252608c606082015260808101919091526200007b906003906005620001d5565b5060646009553480156200008e57600080fd5b506040516200176338038062001763833981016040819052620000b19162000246565b620000bc33620000e2565b600180546001600160a01b0319166001600160a01b039290921691909117905562000276565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620001c35791602002820160005b838211156200018f57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000149565b8015620001c15782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200018f565b505b50620001d19291506200022f565b5090565b600183019183908215620001c35791602002820160005b838211156200018f57835183826101000a81548163ffffffff021916908360ff1602179055509260200192600401602081600301049283019260010302620001ec565b5b80821115620001d1576000815560010162000230565b60006020828403121562000258578081fd5b81516001600160a01b03811681146200026f578182fd5b9392505050565b6114dd80620002866000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063dd752e5511610071578063dd752e551461026e578063ea4a110414610281578063f2fde38b14610294578063fb468e46146102a7578063fc0c546a146102ba57600080fd5b80638da5cb5b146101ee578063b0cb69f114610213578063c570e56314610233578063dd418ae21461024657600080fd5b80634a14c909116100de5780634a14c90914610171578063584b62a11461017a578063715018a6146101c45780637ba6f458146101cc57600080fd5b80631bf581b0146101105780632e17de7814610125578063444a1cec1461013857806346abf3911461014b575b600080fd5b61012361011e366004611212565b6102cd565b005b6101236101333660046112a2565b61048e565b6101236101463660046112a2565b6106b7565b61015e6101593660046112a2565b610700565b6040519081526020015b60405180910390f35b61015e60095481565b61018d6101883660046111e7565b610717565b6040805160ff909616865263ffffffff9094166020860152911515928401929092526060830191909152608082015260a001610168565b610123610774565b6101df6101da3660046111c4565b610788565b60405161016893929190611363565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610168565b61015e6102213660046111c4565b600b6020526000908152604090205481565b6101236102413660046112d2565b610a29565b6102596102543660046112a2565b610b1b565b60405163ffffffff9091168152602001610168565b61012361027c3660046112d2565b610b4b565b61025961028f3660046112a2565b610f7b565b6101236102a23660046111c4565b610f8b565b6101236102b53660046111c4565b611004565b6001546101fb906001600160a01b031681565b6102d561111a565b600581146103205760405162461bcd60e51b815260206004820152601360248201527213db9b1e480d48185b5bdd5b9d081d985b1a59606a1b60448201526064015b60405180910390fd5b6000805b828110156103d05783838281811061034c57634e487b7160e01b600052603260045260246000fd5b905060200201356004826005811061037457634e487b7160e01b600052603260045260246000fd5b01600082825461038491906113cb565b9091555084905083828181106103aa57634e487b7160e01b600052603260045260246000fd5b90506020020135826103bc91906113cb565b9150806103c881611461565b915050610324565b50604051819033907f2bae86d3703c10683fcc32c64b37371fa399ea6d8f006c9c39363cc649a97d2390600090a36001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561045057600080fd5b505af1158015610464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190611282565b50505050565b336000908152600a602052604081208054839081106104bd57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003909102018054909150600160281b900460ff161561051c5760405162461bcd60e51b815260206004820152601060248201526f185b1c9958591e481d5b9cdd185ad95960821b6044820152606401610317565b805460029060ff166005811061054257634e487b7160e01b600052603260045260246000fd5b60088104919091015482546105729260071660040261010090810a90920463ffffffff90811692909104166113e3565b63ffffffff164210156105c75760405162461bcd60e51b815260206004820152601b60248201527f7374616b696e6720706572696f64206e6f742066696e697368656400000000006044820152606401610317565b805465ff00000000001916600160281b178155336000818152600b60205260408082208054600019019055600284015484549151909360ff92909216927f9bda9a567fe5ce9bcfb637505de9a1dc9d112a34e25a8524026e3d869f95b47191a4600154600282015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044015b602060405180830381600087803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190611282565b505050565b6106bf61111a565b60095460408051918252602082018390527fefaa95c86e212013eb825912ed384f914394e790782b9ccd4bcaa2f643739419910160405180910390a1600955565b6004816005811061071057600080fd5b0154905081565b600a602052816000526040600020818154811061073357600080fd5b600091825260209091206003909102018054600182015460029092015460ff808316955063ffffffff6101008404169450600160281b909204909116919085565b61077c61111a565b6107866000611174565b565b6001600160a01b0381166000908152600a602090815260408083208054825181850281018501909352808352606094859485949392919084015b828210156108335760008481526020908190206040805160a08101825260038602909201805460ff808216855263ffffffff61010083041685870152600160281b909104161515918301919091526001808201546060840152600290910154608083015290835290920191016107c2565b505050506001600160a01b0385166000908152600b60205260409020549093508067ffffffffffffffff81111561087a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108d357816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816108985790505b5092508067ffffffffffffffff8111156108fd57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610926578160200160208202803683370190505b5091506000805b8551811015610a1f57336000908152600a6020526040902080548290811061096557634e487b7160e01b600052603260045260246000fd5b6000918252602090912060039091020154600160281b900460ff16610a0f578581815181106109a457634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106109cc57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808483815181106109f857634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610a0c82611461565b91505b610a1881611461565b905061092d565b5050509193909250565b610a3161111a565b60058260ff1610610a725760405162461bcd60e51b815260206004820152600b60248201526a57726f6e6720636c61737360a81b6044820152606401610317565b8060048360ff1660058110610a9757634e487b7160e01b600052603260045260246000fd5b016000828254610aa791906113cb565b909155505060405160ff831690829033907f305317335c19882d74d7a1a24799ce119ddbb6f07895cbcc58802bff5c67697290600090a46001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401610660565b60038160058110610b2b57600080fd5b60089182820401919006600402915054906101000a900463ffffffff1681565b60058260ff1610610b8c5760405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720636c61737360a81b6044820152606401610317565b60008111610bd45760405162461bcd60e51b815260206004820152601560248201527463616e6e6f74207374616b65203020746f6b656e7360581b6044820152606401610317565b600954336000908152600b602052604090205410610c2a5760405162461bcd60e51b81526020600482015260136024820152724d41585f5354414b4553206f766572666c6f7760681b6044820152606401610317565b60006301e1338060028460ff1660058110610c5557634e487b7160e01b600052603260045260246000fd5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1683606460038760ff1660058110610c9e57634e487b7160e01b600052603260045260246000fd5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1686610ccb919061142b565b610cd5919061140b565b610cdf919061144a565b610ce9919061142b565b610cf3919061140b565b905060008111610d385760405162461bcd60e51b815260206004820152601060248201526f1d1bdbc81cdb585b1b08185b5bdd5b9d60821b6044820152606401610317565b8060048460ff1660058110610d5d57634e487b7160e01b600052603260045260246000fd5b01541015610dad5760405162461bcd60e51b815260206004820152601f60248201527f72657761726420706f6f6c206973206c657373207468616e20726577617264006044820152606401610317565b8060048460ff1660058110610dd257634e487b7160e01b600052603260045260246000fd5b0180549190910390556000610de782846113cb565b336000818152600a60209081526040808320815160a08101835260ff808c16825263ffffffff428116838701908152838601888152606085018e8152608086018c8152875460018181018a55988c528a8c20975160039091029097018054945193511515600160281b0265ff000000000019949096166101000264ffffffffff1990951697909616969096179290921716919091178255519281019290925551600290910155928252600b9052908120805492935091610ea690611461565b90915550604080518481526020810183905260ff86169133917f0a79772743d87ba7576fca49d64545ccce7a2369f471f1badf89540cdb09b282910160405180910390a36001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610f3c57600080fd5b505af1158015610f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f749190611282565b5050505050565b60028160058110610b2b57600080fd5b610f9361111a565b6001600160a01b038116610ff85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610317565b61100181611174565b50565b61100c61111a565b6001546001600160a01b038281169116141561106a5760405162461bcd60e51b815260206004820181905260248201527f556e61626c6520746f207769746864726177207374616b696e6720746f6b656e6044820152606401610317565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156110ac57600080fd5b505afa1580156110c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e491906112ba565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0383169063a9059cbb90604401610660565b6000546001600160a01b031633146107865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610317565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156111d5578081fd5b81356111e081611492565b9392505050565b600080604083850312156111f9578081fd5b823561120481611492565b946020939093013593505050565b60008060208385031215611224578182fd5b823567ffffffffffffffff8082111561123b578384fd5b818501915085601f83011261124e578384fd5b81358181111561125c578485fd5b8660208260051b8501011115611270578485fd5b60209290920196919550909350505050565b600060208284031215611293578081fd5b815180151581146111e0578182fd5b6000602082840312156112b3578081fd5b5035919050565b6000602082840312156112cb578081fd5b5051919050565b600080604083850312156112e4578182fd5b823560ff81168114611204578283fd5b6000815180845260208085019450808401835b83811015611358578151805160ff1688528381015163ffffffff1684890152604080820151151590890152606080820151908901526080908101519088015260a09096019590820190600101611307565b509495945050505050565b60608152600061137660608301866112f4565b60208382038185015261138982876112f4565b84810360408601528551808252828701935090820190845b818110156113bd578451835293830193918301916001016113a1565b509098975050505050505050565b600082198211156113de576113de61147c565b500190565b600063ffffffff8083168185168083038211156114025761140261147c565b01949350505050565b60008261142657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114455761144561147c565b500290565b60008282101561145c5761145c61147c565b500390565b60006000198214156114755761147561147c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461100157600080fdfea26469706673582212206588e080ebc2c5d39828dd5ee25ceafa58d8d121e4c3ec1baba9745aca6de80e64736f6c63430008040033";

type FixedStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FixedStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FixedStaking__factory extends ContractFactory {
  constructor(...args: FixedStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FixedStaking> {
    return super.deploy(token_, overrides || {}) as Promise<FixedStaking>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  override attach(address: string): FixedStaking {
    return super.attach(address) as FixedStaking;
  }
  override connect(signer: Signer): FixedStaking__factory {
    return super.connect(signer) as FixedStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedStakingInterface {
    return new utils.Interface(_abi) as FixedStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedStaking {
    return new Contract(address, _abi, signerOrProvider) as FixedStaking;
  }
}
