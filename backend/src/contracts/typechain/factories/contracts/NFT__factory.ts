/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFT, NFTInterface } from "../../contracts/NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxCountPerBatch_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsCount_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amounts_",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris_",
        type: "string[]",
      },
    ],
    name: "createBatchNfts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "createNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createdIdsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCountPerBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count_",
        type: "uint256",
      },
    ],
    name: "updateMaxCountPerBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b916003916200015a565b503480156200002957600080fd5b5060405162002184380380620021848339810160408190526200004c9162000200565b60408051808201909152601581527f68747470733a2f2f697066732e696f2f697066732f000000000000000000000060208201526200008b81620000df565b506200009733620000f8565b60408051808201909152601581527f68747470733a2f2f697066732e696f2f697066732f00000000000000000000006020820152620000d6906200014a565b60065562000257565b8051620000f49060029060208401906200015a565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051620000f49060039060208401905b82805462000168906200021a565b90600052602060002090601f0160209004810192826200018c5760008555620001d7565b82601f10620001a757805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d7578251825591602001919060010190620001ba565b50620001e5929150620001e9565b5090565b5b80821115620001e55760008155600101620001ea565b6000602082840312156200021357600080fd5b5051919050565b600181811c908216806200022f57607f821691505b602082108114156200025157634e487b7160e01b600052602260045260246000fd5b50919050565b611f1d80620002676000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638c9c9ee211610097578063df73106611610066578063df73106614610210578063e985e9c514610223578063f242432a1461025f578063f2fde38b1461027257600080fd5b80638c9c9ee2146101bc5780638da5cb5b146101cf578063a22cb465146101ea578063ca715c1d146101fd57600080fd5b80633430a386116100d35780633430a386146101825780634e1273f41461018b5780636570d3c5146101ab578063715018a6146101b457600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630e89341c1461014d5780632eb2c2d61461016d575b600080fd5b6101176101123660046113ef565b610285565b6040519081526020015b60405180910390f35b61013d61013836600461142f565b61031b565b6040519015158152602001610121565b61016061015b36600461144c565b61036d565b60405161012191906114c1565b61018061017b36600461161d565b61044d565b005b61011760065481565b61019e6101993660046116c6565b610499565b60405161012191906117cb565b61011760075481565b6101806105c2565b6101806101ca36600461144c565b6105d6565b6005546040516001600160a01b039091168152602001610121565b6101806101f83660046117de565b610623565b61018061020b366004611865565b610632565b61018061021e3660046118de565b61082f565b61013d610231366004611959565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61018061026d36600461198c565b6108aa565b6101806102803660046119f0565b6108ef565b60006001600160a01b0383166102f55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061034c57506001600160e01b031982166303a24d0760e21b145b8061036757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526004602052604081208054606092919061038b90611a0b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611a0b565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905060008151116104225761041d83610968565b610446565b600381604051602001610436929190611a62565b6040516020818303038152906040525b9392505050565b6001600160a01b03851633148061046957506104698533610231565b6104855760405162461bcd60e51b81526004016102ec90611b09565b61049285858585856109fc565b5050505050565b606081518351146104fe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ec565b600083516001600160401b03811115610519576105196114d4565b604051908082528060200260200182016040528015610542578160200160208202803683370190505b50905060005b84518110156105ba5761058d85828151811061056657610566611b58565b602002602001015185838151811061058057610580611b58565b6020026020010151610285565b82828151811061059f5761059f611b58565b60209081029190910101526105b381611b84565b9050610548565b509392505050565b6105ca610b98565b6105d46000610bf2565b565b6105de610b98565b6001811161061e5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a590818dbdd5b9d609a1b60448201526064016102ec565b600655565b61062e338383610c44565b5050565b6006548511156106845760405162461bcd60e51b815260206004820152601c60248201527f4d41585f434f554e545f5045525f42415443482065786365656465640000000060448201526064016102ec565b8481146106d35760405162461bcd60e51b815260206004820152601c60248201527f49647320616e642075726973206c656e677468206d69736d617463680000000060448201526064016102ec565b6000856001600160401b038111156106ed576106ed6114d4565b604051908082528060200260200182016040528015610716578160200160208202803683370190505b5060075490915060005b878110156107c2576107328183611b9f565b83828151811061074457610744611b58565b60209081029190910101526107ba61075c8284611b9f565b86868481811061076e5761076e611b58565b90506020028101906107809190611bb7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d2592505050565b600101610720565b5061080f3383888880806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250610d89915050565b86600760008282546108219190611b9f565b909155505050505050505050565b600060075490506108768184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d2592505050565b61089133828660405180602001604052806000815250610ed4565b6007600081546108a090611b84565b9091555050505050565b6001600160a01b0385163314806108c657506108c68533610231565b6108e25760405162461bcd60e51b81526004016102ec90611b09565b6104928585858585610fae565b6108f7610b98565b6001600160a01b03811661095c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ec565b61096581610bf2565b50565b60606002805461097790611a0b565b80601f01602080910402602001604051908101604052809291908181526020018280546109a390611a0b565b80156109f05780601f106109c5576101008083540402835291602001916109f0565b820191906000526020600020905b8154815290600101906020018083116109d357829003601f168201915b50505050509050919050565b8151835114610a1d5760405162461bcd60e51b81526004016102ec90611bfd565b6001600160a01b038416610a435760405162461bcd60e51b81526004016102ec90611c45565b3360005b8451811015610b2a576000858281518110610a6457610a64611b58565b602002602001015190506000858381518110610a8257610a82611b58565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610ad25760405162461bcd60e51b81526004016102ec90611c8a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610b0f908490611b9f565b9250508190555050505080610b2390611b84565b9050610a47565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b7a929190611cd4565b60405180910390a4610b908187878787876110d8565b505050505050565b6005546001600160a01b031633146105d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ec565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610cb85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ec565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008281526004602090815260409091208251610d449284019061133a565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610d708461036d565b604051610d7d91906114c1565b60405180910390a25050565b6001600160a01b038416610daf5760405162461bcd60e51b81526004016102ec90611cf9565b8151835114610dd05760405162461bcd60e51b81526004016102ec90611bfd565b3360005b8451811015610e6c57838181518110610def57610def611b58565b6020026020010151600080878481518110610e0c57610e0c611b58565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e549190611b9f565b90915550819050610e6481611b84565b915050610dd4565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ebd929190611cd4565b60405180910390a4610492816000878787876110d8565b6001600160a01b038416610efa5760405162461bcd60e51b81526004016102ec90611cf9565b336000610f0685611234565b90506000610f1385611234565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610f45908490611b9f565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610fa58360008989898961127f565b50505050505050565b6001600160a01b038416610fd45760405162461bcd60e51b81526004016102ec90611c45565b336000610fe085611234565b90506000610fed85611234565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156110305760405162461bcd60e51b81526004016102ec90611c8a565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061106d908490611b9f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110cd848a8a8a8a8a61127f565b505050505050505050565b6001600160a01b0384163b15610b905760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061111c9089908990889088908890600401611d3a565b6020604051808303816000875af1925050508015611157575060408051601f3d908101601f1916820190925261115491810190611d98565b60015b61120457611163611db5565b806308c379a0141561119d5750611178611dd1565b80611183575061119f565b8060405162461bcd60e51b81526004016102ec91906114c1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ec565b6001600160e01b0319811663bc197c8160e01b14610fa55760405162461bcd60e51b81526004016102ec90611e5a565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061126e5761126e611b58565b602090810291909101015292915050565b6001600160a01b0384163b15610b905760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112c39089908990889088908890600401611ea2565b6020604051808303816000875af19250505080156112fe575060408051601f3d908101601f191682019092526112fb91810190611d98565b60015b61130a57611163611db5565b6001600160e01b0319811663f23a6e6160e01b14610fa55760405162461bcd60e51b81526004016102ec90611e5a565b82805461134690611a0b565b90600052602060002090601f01602090048101928261136857600085556113ae565b82601f1061138157805160ff19168380011785556113ae565b828001600101855582156113ae579182015b828111156113ae578251825591602001919060010190611393565b506113ba9291506113be565b5090565b5b808211156113ba57600081556001016113bf565b80356001600160a01b03811681146113ea57600080fd5b919050565b6000806040838503121561140257600080fd5b61140b836113d3565b946020939093013593505050565b6001600160e01b03198116811461096557600080fd5b60006020828403121561144157600080fd5b813561044681611419565b60006020828403121561145e57600080fd5b5035919050565b60005b83811015611480578181015183820152602001611468565b8381111561148f576000848401525b50505050565b600081518084526114ad816020860160208601611465565b601f01601f19169290920160200192915050565b6020815260006104466020830184611495565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561150f5761150f6114d4565b6040525050565b60006001600160401b0382111561152f5761152f6114d4565b5060051b60200190565b600082601f83011261154a57600080fd5b8135602061155782611516565b60405161156482826114ea565b83815260059390931b850182019282810191508684111561158457600080fd5b8286015b8481101561159f5780358352918301918301611588565b509695505050505050565b600082601f8301126115bb57600080fd5b81356001600160401b038111156115d4576115d46114d4565b6040516115eb601f8301601f1916602001826114ea565b81815284602083860101111561160057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561163557600080fd5b61163e866113d3565b945061164c602087016113d3565b935060408601356001600160401b038082111561166857600080fd5b61167489838a01611539565b9450606088013591508082111561168a57600080fd5b61169689838a01611539565b935060808801359150808211156116ac57600080fd5b506116b9888289016115aa565b9150509295509295909350565b600080604083850312156116d957600080fd5b82356001600160401b03808211156116f057600080fd5b818501915085601f83011261170457600080fd5b8135602061171182611516565b60405161171e82826114ea565b83815260059390931b850182019282810191508984111561173e57600080fd5b948201945b8386101561176357611754866113d3565b82529482019490820190611743565b9650508601359250508082111561177957600080fd5b5061178685828601611539565b9150509250929050565b600081518084526020808501945080840160005b838110156117c0578151875295820195908201906001016117a4565b509495945050505050565b6020815260006104466020830184611790565b600080604083850312156117f157600080fd5b6117fa836113d3565b91506020830135801515811461180f57600080fd5b809150509250929050565b60008083601f84011261182c57600080fd5b5081356001600160401b0381111561184357600080fd5b6020830191508360208260051b850101111561185e57600080fd5b9250929050565b60008060008060006060868803121561187d57600080fd5b8535945060208601356001600160401b038082111561189b57600080fd5b6118a789838a0161181a565b909650945060408801359150808211156118c057600080fd5b506118cd8882890161181a565b969995985093965092949392505050565b6000806000604084860312156118f357600080fd5b8335925060208401356001600160401b038082111561191157600080fd5b818601915086601f83011261192557600080fd5b81358181111561193457600080fd5b87602082850101111561194657600080fd5b6020830194508093505050509250925092565b6000806040838503121561196c57600080fd5b611975836113d3565b9150611983602084016113d3565b90509250929050565b600080600080600060a086880312156119a457600080fd5b6119ad866113d3565b94506119bb602087016113d3565b9350604086013592506060860135915060808601356001600160401b038111156119e457600080fd5b6116b9888289016115aa565b600060208284031215611a0257600080fd5b610446826113d3565b600181811c90821680611a1f57607f821691505b60208210811415611a4057634e487b7160e01b600052602260045260246000fd5b50919050565b60008151611a58818560208601611465565b9290920192915050565b600080845481600182811c915080831680611a7e57607f831692505b6020808410821415611a9e57634e487b7160e01b86526022600452602486fd5b818015611ab25760018114611ac357611af0565b60ff19861689528489019650611af0565b60008b81526020902060005b86811015611ae85781548b820152908501908301611acf565b505084890196505b505050505050611b008185611a46565b95945050505050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b9857611b98611b6e565b5060010190565b60008219821115611bb257611bb2611b6e565b500190565b6000808335601e19843603018112611bce57600080fd5b8301803591506001600160401b03821115611be857600080fd5b60200191503681900382131561185e57600080fd5b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611ce76040830185611790565b8281036020840152611b008185611790565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611d6690830186611790565b8281036060840152611d788186611790565b90508281036080840152611d8c8185611495565b98975050505050505050565b600060208284031215611daa57600080fd5b815161044681611419565b600060033d1115611dce5760046000803e5060005160e01c5b90565b600060443d1015611ddf5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715611e0e57505050505090565b8285019150815181811115611e265750505050505090565b843d8701016020828501011115611e405750505050505090565b611e4f602082860101876114ea565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611edc90830184611495565b97965050505050505056fea2646970667358221220f49844d60ec280b7b4f0ecb237e0c4125a8b01a5de6676ee3f85ac2fbaa85c7c64736f6c634300080c0033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    maxCountPerBatch_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(maxCountPerBatch_, overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    maxCountPerBatch_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(maxCountPerBatch_, overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
